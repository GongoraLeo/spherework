1747944341
8a0c4faa9771445189035ca844487507-phpdoc%3Ae3c54a9ea63d9dbd43d5c51432f64084-1d9bee1ace9ed6cc39748f47051d360e
s:15684:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:17:"PedidosSeeder.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:17:"\Database\Seeders";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Database\Seeders";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Seeders";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:31:"\Database\Seeders\PedidosSeeder";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:38:"\Database\Seeders\PedidosSeeder::run()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:40;s:47:" phpDocumentor\Reflection\Location columnNumber";i:1933;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:72;s:47:" phpDocumentor\Reflection\Location columnNumber";i:3833;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\Database\Seeders\PedidosSeeder::run()";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"run";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"Ejecuta las operaciones de seeding para la tabla `pedidos`.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:936:"Este método primero vacía la tabla `pedidos` usando `Pedidos::query()->delete()`.
A continuación, busca un usuario específico con el email 'cliente@spherework.com'
utilizando `User::where(...)->first()`. También busca al usuario administrador,
aunque no se utiliza para crear pedidos en la lógica actual.
Si encuentra el usuario cliente (`$userCliente1`), procede a crear dos pedidos para él:
1. Un pedido con estado `Pedidos::STATUS_COMPLETADO`, un total de ejemplo (38.45) y una fecha
   de pedido establecida a 5 días antes de la fecha actual (`now()->subDays(5)`).
2. Un pedido con estado `Pedidos::STATUS_PENDIENTE` (representando un carrito),
   con `total` y `fecha_pedido` establecidos a `null`, como es apropiado para un pedido no finalizado.
Si el usuario `cliente@spherework.com` no se encuentra, se emite una advertencia
en la consola utilizando `$this->command->warn()` indicando que no se crearon pedidos para él.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:16:"Database\Seeders";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:4:{s:18:"WithoutModelEvents";s:52:"Illuminate\Database\Console\Seeds\WithoutModelEvents";s:6:"Seeder";s:26:"Illuminate\Database\Seeder";s:7:"Pedidos";s:18:"App\Models\Pedidos";s:4:"User";s:15:"App\Models\User";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:73;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\Database\Seeders\PedidosSeeder";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"PedidosSeeder";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:19:"Class PedidosSeeder";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:272:"Seeder encargado de poblar la tabla `pedidos` con datos iniciales.
Primero elimina todos los registros existentes en la tabla. Luego, busca
usuarios específicos (creados por `UserSeeder`) y, si los encuentra,
crea pedidos asociados a ellos con diferentes estados y datos.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:16:"Database\Seeders";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:42;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Illuminate\Database\Seeder";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Seeder";}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"1d9bee1ace9ed6cc39748f47051d360e";s:39:" phpDocumentor\Reflection\Php\File path";s:34:"database/seeders/PedidosSeeder.php";s:41:" phpDocumentor\Reflection\Php\File source";s:3837:"<?php
// database/seeders/PedidosSeeder.php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents; // Trait para deshabilitar eventos de modelo durante el seeding.
use Illuminate\Database\Seeder; // Clase base para los seeders.
use App\Models\Pedidos; // Modelo Pedidos para interactuar con la tabla.
use App\Models\User; // Modelo User para obtener IDs de usuarios válidos.

/**
 * Class PedidosSeeder
 *
 * Seeder encargado de poblar la tabla `pedidos` con datos iniciales.
 * Primero elimina todos los registros existentes en la tabla. Luego, busca
 * usuarios específicos (creados por `UserSeeder`) y, si los encuentra,
 * crea pedidos asociados a ellos con diferentes estados y datos.
 *
 * @package Database\Seeders
 */
class PedidosSeeder extends Seeder
{
    /**
     * Ejecuta las operaciones de seeding para la tabla `pedidos`.
     *
     * Este método primero vacía la tabla `pedidos` usando `Pedidos::query()->delete()`.
     * A continuación, busca un usuario específico con el email 'cliente@spherework.com'
     * utilizando `User::where(...)->first()`. También busca al usuario administrador,
     * aunque no se utiliza para crear pedidos en la lógica actual.
     * Si encuentra el usuario cliente (`$userCliente1`), procede a crear dos pedidos para él:
     * 1. Un pedido con estado `Pedidos::STATUS_COMPLETADO`, un total de ejemplo (38.45) y una fecha
     *    de pedido establecida a 5 días antes de la fecha actual (`now()->subDays(5)`).
     * 2. Un pedido con estado `Pedidos::STATUS_PENDIENTE` (representando un carrito),
     *    con `total` y `fecha_pedido` establecidos a `null`, como es apropiado para un pedido no finalizado.
     * Si el usuario `cliente@spherework.com` no se encuentra, se emite una advertencia
     * en la consola utilizando `$this->command->warn()` indicando que no se crearon pedidos para él.
     *
     * @return void
     */
    public function run(): void
    {
        // Vacía la tabla 'pedidos' antes de insertar nuevos datos.
        Pedidos::query()->delete();

        // Busca el usuario cliente específico por email.
        // Se considera más robusto buscar por un atributo único que asumir IDs fijos.
        $userCliente1 = User::where('email', 'cliente@spherework.com')->first();
        // Busca el usuario administrador (actualmente no se usa para crear pedidos en este seeder).
        $userAdmin = User::where('email', 'admin@spherework.com')->first();

        // Procede a crear pedidos solo si el usuario cliente fue encontrado.
        if ($userCliente1) {
            // Crea un pedido completado para el usuario cliente encontrado.
            Pedidos::create([
                'cliente_id'   => $userCliente1->id, // Asigna el ID del usuario encontrado.
                'status'       => Pedidos::STATUS_COMPLETADO, // Establece el estado usando la constante del modelo.
                'total'        => 38.45, // Asigna un total de ejemplo.
                'fecha_pedido' => now()->subDays(5), // Establece la fecha del pedido a 5 días atrás.
            ]);

            // Crea un pedido pendiente (carrito) para el mismo usuario cliente.
            Pedidos::create([
                'cliente_id'   => $userCliente1->id, // Asigna el ID del usuario encontrado.
                'status'       => Pedidos::STATUS_PENDIENTE, // Establece el estado a pendiente.
                'total'        => null, // El total es nulo para pedidos pendientes.
                'fecha_pedido' => null, // La fecha es nula para pedidos pendientes.
            ]);
        } else {
            // Si no se encontró el usuario cliente, muestra una advertencia en la consola.
            $this->command->warn('Usuario cliente (cliente@spherework.com) no encontrado. No se crearon pedidos para él.');
        }
    }
}
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";