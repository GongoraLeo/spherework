1747944341
8a0c4faa9771445189035ca844487507-phpdoc%3Ab87e5283873b67161cc95545778e55c0-9bd4c19b5b8d1a8de960d4ca0e1838b6
s:83220:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:29:"DetallespedidosController.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\App\Http\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\App\Http\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:47:"\App\Http\Controllers\DetallespedidosController";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:7:{s:56:"\App\Http\Controllers\DetallespedidosController::index()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:45;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2688;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:89;s:47:" phpDocumentor\Reflection\Location columnNumber";i:5448;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Illuminate\View\View";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"View";}}i:1;O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\App\Http\Controllers\DetallespedidosController::index()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"index";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:75:"Muestra el contenido del carrito de compras actual del usuario autenticado.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:891:"Primero, verifica si el usuario está autenticado usando `Auth::check()`. Si no lo está,
redirige a la ruta de login. Si está autenticado, obtiene el usuario y busca su pedido
con estado 'pendiente' (`Pedidos::STATUS_PENDIENTE`) usando `Pedidos::where(...)->first()`.
Si encuentra un pedido pendiente, recupera los detalles (ítems) asociados a ese pedido
(`Detallespedidos::where(...)`) utilizando Eager Loading (`with(['libro.autor', 'libro.editorial'])`)
para cargar eficientemente la información del libro, autor y editorial relacionados.
Luego, calcula el total del carrito sumando el producto de precio y cantidad para cada detalle,
realizando una verificación para asegurar que precio y cantidad sean numéricos.
Finalmente, renderiza la vista 'detallespedidos.index', pasándole la colección de detalles
(o una colección vacía si no hay pedido pendiente) y el total calculado.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:73:"Retorna la vista del carrito o redirige al login si no está autenticado.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Illuminate\View\View";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"View";}}i:1;O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:20:"App\Http\Controllers";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:8:{s:15:"Detallespedidos";s:26:"App\Models\Detallespedidos";s:7:"Pedidos";s:18:"App\Models\Pedidos";s:6:"Libros";s:17:"App\Models\Libros";s:7:"Request";s:23:"Illuminate\Http\Request";s:4:"Auth";s:31:"Illuminate\Support\Facades\Auth";s:4:"View";s:20:"Illuminate\View\View";s:16:"RedirectResponse";s:32:"Illuminate\Http\RedirectResponse";s:3:"Log";s:30:"Illuminate\Support\Facades\Log";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:57:"\App\Http\Controllers\DetallespedidosController::create()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:101;s:47:" phpDocumentor\Reflection\Location columnNumber";i:6002;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:106;s:47:" phpDocumentor\Reflection\Location columnNumber";i:6323;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\App\Http\Controllers\DetallespedidosController::create()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"create";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:50:"Muestra el formulario para crear un nuevo recurso.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:342:"Este método no es aplicable para la lógica del carrito de compras, ya que los ítems
(Detallespedidos) se añaden implícitamente a través del método `store` al interactuar
con el catálogo de libros. Por lo tanto, redirige al índice de libros (`libros.index`)
con un mensaje informativo para guiar al usuario sobre cómo añadir ítems.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:38:"Siempre redirige a la lista de libros.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:56:"\App\Http\Controllers\DetallespedidosController::store()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:24:"\Illuminate\Http\Request";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Request";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:130;s:47:" phpDocumentor\Reflection\Location columnNumber";i:8007;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:203;s:47:" phpDocumentor\Reflection\Location columnNumber";i:12342;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\App\Http\Controllers\DetallespedidosController::store()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"store";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:68:"Almacena un nuevo ítem (Detallespedidos) en el carrito del usuario.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:1235:"Este método se invoca al enviar el formulario "Añadir al Carrito" desde la vista de un libro.
Primero, valida los datos recibidos (`libro_id`, `cantidad`, `precio`) usando `$request->validate()`.
Luego, verifica si el usuario está autenticado (`Auth::check()`); si no, redirige al login.
Utiliza `Pedidos::firstOrCreate()` para buscar un pedido pendiente existente para el usuario
o crear uno nuevo si no existe, asociándolo al `cliente_id` del usuario y estableciendo
el estado a `Pedidos::STATUS_PENDIENTE`. Se incluye un try-catch para manejar errores
durante esta operación.
A continuación, busca si ya existe un detalle (`Detallespedidos`) para el mismo libro
dentro del pedido pendiente encontrado o creado.
Si el detalle ya existe (`$detalleExistente`), incrementa su cantidad sumando la nueva cantidad
recibida y guarda el cambio. Se decidió mantener el precio original con el que se añadió.
Si el detalle no existe, crea un nuevo registro `Detallespedidos` con los datos del libro,
cantidad, precio (tomado del request) y el ID del pedido pendiente.
Finalmente, redirige al usuario a la vista del carrito (`detallespedidos.index`) con un
mensaje de éxito indicando si el libro fue añadido o su cantidad actualizada.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:65:"Objeto con los datos del formulario (libro_id, cantidad, precio).";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:24:"\Illuminate\Http\Request";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Request";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:64:"Redirige a la vista del carrito o a login/atrás si hay errores.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:55:"\App\Http\Controllers\DetallespedidosController::show()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:15:"detallespedidos";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:215;s:47:" phpDocumentor\Reflection\Location columnNumber";i:12913;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:219;s:47:" phpDocumentor\Reflection\Location columnNumber";i:13145;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\App\Http\Controllers\DetallespedidosController::show()";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"show";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:49:"Muestra un recurso específico (Detallespedidos).";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:244:"Este método no es relevante para la funcionalidad del carrito, donde todos los ítems
se visualizan juntos en la vista `index`. Por convención de recursos RESTful,
existe, pero simplemente redirige al usuario a la vista principal del carrito.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:59:"Instancia inyectada por Route Model Binding (no utilizada).";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:15:"detallespedidos";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:40:"Siempre redirige al índice del carrito.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:55:"\App\Http\Controllers\DetallespedidosController::edit()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:15:"detallespedidos";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:232;s:47:" phpDocumentor\Reflection\Location columnNumber";i:13784;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:236;s:47:" phpDocumentor\Reflection\Location columnNumber";i:14014;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\App\Http\Controllers\DetallespedidosController::edit()";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"edit";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:75:"Muestra el formulario para editar un recurso específico (Detallespedidos).";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:279:"Este método no se utiliza en la implementación actual del carrito. La edición
(específicamente, la actualización de la cantidad) se realiza directamente
desde la vista `index` mediante el método `update`. Por lo tanto, esta ruta
simplemente redirige al índice del carrito.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:59:"Instancia inyectada por Route Model Binding (no utilizada).";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:15:"detallespedidos";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:40:"Siempre redirige al índice del carrito.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:57:"\App\Http\Controllers\DetallespedidosController::update()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:24:"\Illuminate\Http\Request";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Request";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:15:"detallespedidos";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:258;s:47:" phpDocumentor\Reflection\Location columnNumber";i:15444;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:297;s:47:" phpDocumentor\Reflection\Location columnNumber";i:17856;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\App\Http\Controllers\DetallespedidosController::update()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"update";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:60:"Actualiza la cantidad de un ítem específico en el carrito.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:931:"Se invoca típicamente desde un formulario en la vista del carrito (`detallespedidos.index`).
Valida que la `cantidad` recibida sea un entero positivo.
Verifica que el usuario esté autenticado (`Auth::check()`).
Realiza una comprobación de autorización crucial: utiliza `loadMissing('pedido')` para
cargar la relación con el pedido asociado al detalle (si no está ya cargada) y luego
verifica que este pedido exista, pertenezca al usuario autenticado (`cliente_id`) y
tenga el estado 'pendiente' (`Pedidos::STATUS_PENDIENTE`). Si alguna de estas condiciones
no se cumple, registra una advertencia y redirige con un error, previniendo modificaciones
no autorizadas.
Si la autorización es correcta, actualiza el atributo `cantidad` del modelo `$detallespedidos`
con el valor validado y guarda los cambios usando `save()`.
Finalmente, redirige de vuelta a la vista del carrito (`detallespedidos.index`) con un mensaje de éxito.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:29:"Objeto con la nueva cantidad.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:24:"\Illuminate\Http\Request";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Request";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:55:"Instancia del ítem a actualizar (Route Model Binding).";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:15:"detallespedidos";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:62:"Redirige al índice del carrito o a login/atrás si hay error.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:58:"\App\Http\Controllers\DetallespedidosController::destroy()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:15:"detallespedidos";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:315;s:47:" phpDocumentor\Reflection\Location columnNumber";i:19046;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:343;s:47:" phpDocumentor\Reflection\Location columnNumber";i:20624;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\App\Http\Controllers\DetallespedidosController::destroy()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"destroy";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"Elimina un ítem específico (Detallespedidos) del carrito.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:795:"Se invoca típicamente desde un botón o formulario en la vista del carrito (`detallespedidos.index`).
Verifica que el usuario esté autenticado (`Auth::check()`).
Realiza la misma comprobación de autorización estricta que en `update()`: carga la relación
con el pedido (`loadMissing('pedido')`) y verifica que el pedido exista, pertenezca al
usuario autenticado (`cliente_id`) y esté en estado 'pendiente' (`Pedidos::STATUS_PENDIENTE`).
Si la autorización falla, registra una advertencia y redirige con error.
Si la autorización es correcta, elimina el registro `Detallespedidos` de la base de datos
usando el método `delete()` sobre la instancia inyectada por Route Model Binding.
Finalmente, redirige de vuelta a la vista del carrito (`detallespedidos.index`) con un mensaje de éxito.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:53:"Instancia del ítem a eliminar (Route Model Binding).";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\App\Models\Detallespedidos";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"Detallespedidos";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:15:"detallespedidos";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:62:"Redirige al índice del carrito o a login/atrás si hay error.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Illuminate\Http\RedirectResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RedirectResponse";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:27;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:344;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\App\Http\Controllers\DetallespedidosController";s:36:" phpDocumentor\Reflection\Fqsen name";s:25:"DetallespedidosController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:31:"Class DetallespedidosController";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:247:"Gestiona las operaciones del carrito de compras del usuario.
Representa los ítems individuales (Detallespedidos) asociados a un Pedido
que se encuentra en estado 'pendiente'. Permite ver el carrito, añadir,
actualizar cantidad y eliminar ítems.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:20:"App\Http\Controllers";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:62;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:32:"\App\Http\Controllers\Controller";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Controller";}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"9bd4c19b5b8d1a8de960d4ca0e1838b6";s:39:" phpDocumentor\Reflection\Php\File path";s:50:"app/Http/Controllers/DetallespedidosController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:20628:"<?php
// filepath: app/Http/Controllers/DetallespedidosController.php

namespace App\Http\Controllers;

use App\Models\Detallespedidos; // Modelo Eloquent para los ítems del carrito/pedido.
use App\Models\Pedidos;         // Modelo Pedidos, necesario para encontrar/crear el pedido pendiente.
use App\Models\Libros;         // Modelo Libros, potencialmente útil (aunque el precio viene del request).
use Illuminate\Http\Request;     // Objeto para manejar la solicitud HTTP (datos de formularios).
use Illuminate\Support\Facades\Auth; // Fachada para obtener el usuario autenticado y verificar sesión.
use Illuminate\View\View;             // Para type hinting del retorno de vistas.
use Illuminate\Http\RedirectResponse; // Para type hinting del retorno de redirecciones.
use Illuminate\Support\Facades\Log;    // Fachada para registrar mensajes de error o advertencias.

/**
 * Class DetallespedidosController
 *
 * Gestiona las operaciones del carrito de compras del usuario.
 * Representa los ítems individuales (Detallespedidos) asociados a un Pedido
 * que se encuentra en estado 'pendiente'. Permite ver el carrito, añadir,
 * actualizar cantidad y eliminar ítems.
 *
 * @package App\Http\Controllers
 */
// Este controlador ahora extiende App\Http\Controllers\Controller, que a su vez
// extiende Illuminate\Routing\Controller e incluye traits útiles como AuthorizesRequests y ValidatesRequests.
class DetallespedidosController extends Controller
{
    /**
     * Muestra el contenido del carrito de compras actual del usuario autenticado.
     *
     * Primero, verifica si el usuario está autenticado usando `Auth::check()`. Si no lo está,
     * redirige a la ruta de login. Si está autenticado, obtiene el usuario y busca su pedido
     * con estado 'pendiente' (`Pedidos::STATUS_PENDIENTE`) usando `Pedidos::where(...)->first()`.
     * Si encuentra un pedido pendiente, recupera los detalles (ítems) asociados a ese pedido
     * (`Detallespedidos::where(...)`) utilizando Eager Loading (`with(['libro.autor', 'libro.editorial'])`)
     * para cargar eficientemente la información del libro, autor y editorial relacionados.
     * Luego, calcula el total del carrito sumando el producto de precio y cantidad para cada detalle,
     * realizando una verificación para asegurar que precio y cantidad sean numéricos.
     * Finalmente, renderiza la vista 'detallespedidos.index', pasándole la colección de detalles
     * (o una colección vacía si no hay pedido pendiente) y el total calculado.
     *
     * @return \Illuminate\View\View|\Illuminate\Http\RedirectResponse Retorna la vista del carrito o redirige al login si no está autenticado.
     */
    public function index(): View|RedirectResponse
    {
        // 1. Autorización: Verifica si el usuario está autenticado.
        // Es crucial para asegurar que solo usuarios logueados accedan a su carrito.
        if (!Auth::check()) {
            // Si no está logueado, redirige a la página de login con un mensaje de error.
            return redirect()->route('login')->with('error', 'Debes iniciar sesión para ver tu carrito.');
        }

        // 2. Obtención del Usuario y Datos Iniciales:
        $user = Auth::user(); // Obtiene el modelo del usuario autenticado.
        $total = 0; // Inicializa el total del carrito.
        $detallespedidos = collect(); // Inicializa como colección vacía por si no hay pedido pendiente.

        // 3. Búsqueda del Pedido Pendiente:
        // Busca un único pedido que pertenezca al usuario (`cliente_id`) y tenga estado 'pendiente'.
        $pedidoPendiente = Pedidos::where('cliente_id', $user->id)
                                 ->where('status', Pedidos::STATUS_PENDIENTE)
                                 ->first(); // Obtiene el primer resultado o null.

        // 4. Obtención de Detalles si existe Pedido Pendiente:
        if ($pedidoPendiente) {
            // Si se encontró un pedido pendiente, obtener sus detalles (ítems).
            // Se usa `with()` para Eager Loading: carga los libros y sus relaciones (autor, editorial)
            // en una consulta eficiente para evitar problemas N+1 en la vista.
            $detallespedidos = Detallespedidos::where('pedido_id', $pedidoPendiente->id)
                                            ->with(['libro.autor', 'libro.editorial']) // Carga el libro y sus relaciones anidadas.
                                            ->get(); // Obtiene la colección de detalles.

            // 5. Cálculo del Total del Carrito:
            // Se utiliza el método `sum()` de la colección de detalles.
            // La función anónima calcula el subtotal para cada ítem (detalle).
            $total = $detallespedidos->sum(function ($detalle) {
                // Verificación defensiva: asegura que precio y cantidad sean numéricos antes de multiplicar.
                $price = is_numeric($detalle->precio) ? $detalle->precio : 0;
                $quantity = is_numeric($detalle->cantidad) ? $detalle->cantidad : 0;
                return $price * $quantity; // Calcula subtotal: precio * cantidad.
            });
        }

        // 6. Retornar la Vista:
        // Renderiza 'resources/views/detallespedidos/index.blade.php'.
        // Pasa la colección de detalles (`$detallespedidos`) y el total calculado (`$total`) a la vista.
        return view('detallespedidos.index', compact('detallespedidos', 'total'));
    }

    /**
     * Muestra el formulario para crear un nuevo recurso.
     *
     * Este método no es aplicable para la lógica del carrito de compras, ya que los ítems
     * (Detallespedidos) se añaden implícitamente a través del método `store` al interactuar
     * con el catálogo de libros. Por lo tanto, redirige al índice de libros (`libros.index`)
     * con un mensaje informativo para guiar al usuario sobre cómo añadir ítems.
     *
     * @return \Illuminate\Http\RedirectResponse Siempre redirige a la lista de libros.
     */
    public function create(): RedirectResponse
    {
        // Redirige al usuario a la página principal de libros (`libros.index`).
        // Se añade un mensaje 'info' para guiar al usuario.
        return redirect()->route('libros.index')->with('info', 'Para añadir libros, usa el botón "Añadir al Carrito".');
    }

    /**
     * Almacena un nuevo ítem (Detallespedidos) en el carrito del usuario.
     *
     * Este método se invoca al enviar el formulario "Añadir al Carrito" desde la vista de un libro.
     * Primero, valida los datos recibidos (`libro_id`, `cantidad`, `precio`) usando `$request->validate()`.
     * Luego, verifica si el usuario está autenticado (`Auth::check()`); si no, redirige al login.
     * Utiliza `Pedidos::firstOrCreate()` para buscar un pedido pendiente existente para el usuario
     * o crear uno nuevo si no existe, asociándolo al `cliente_id` del usuario y estableciendo
     * el estado a `Pedidos::STATUS_PENDIENTE`. Se incluye un try-catch para manejar errores
     * durante esta operación.
     * A continuación, busca si ya existe un detalle (`Detallespedidos`) para el mismo libro
     * dentro del pedido pendiente encontrado o creado.
     * Si el detalle ya existe (`$detalleExistente`), incrementa su cantidad sumando la nueva cantidad
     * recibida y guarda el cambio. Se decidió mantener el precio original con el que se añadió.
     * Si el detalle no existe, crea un nuevo registro `Detallespedidos` con los datos del libro,
     * cantidad, precio (tomado del request) y el ID del pedido pendiente.
     * Finalmente, redirige al usuario a la vista del carrito (`detallespedidos.index`) con un
     * mensaje de éxito indicando si el libro fue añadido o su cantidad actualizada.
     *
     * @param  \Illuminate\Http\Request  $request Objeto con los datos del formulario (libro_id, cantidad, precio).
     * @return \Illuminate\Http\RedirectResponse Redirige a la vista del carrito o a login/atrás si hay errores.
     */
    public function store(Request $request): RedirectResponse
    {
        // 1. Validación de Datos:
        // Se utiliza el método `validate` heredado del controlador base.
        $request->validate([
            'libro_id' => 'required|exists:libros,id', // El libro debe existir en la tabla 'libros'.
            'cantidad' => 'required|integer|min:1',   // La cantidad debe ser un entero positivo.
            'precio'   => 'required|numeric|min:0',   // El precio debe ser numérico y no negativo.
        ]);

        // 2. Autorización: Verifica si el usuario está autenticado.
        if (!Auth::check()) {
            // Si no está autenticado, registra una advertencia y redirige al login.
            Log::warning("Intento de añadir al carrito sin autenticar.");
            return redirect()->route('login')->with('error', 'Debes iniciar sesión para añadir libros al carrito.');
        }
        // A partir de aquí, es seguro usar Auth::user().
        $user = Auth::user();

        // 3. Buscar o Crear Pedido Pendiente:
        // `firstOrCreate` busca un registro que coincida con el primer array.
        // Si no lo encuentra, crea uno nuevo usando los datos del primer array y opcionalmente los del segundo.
        try {
            $pedidoPendiente = Pedidos::firstOrCreate(
                [
                    'cliente_id' => $user->id, // Condición: El pedido debe pertenecer al usuario actual.
                    'status'     => Pedidos::STATUS_PENDIENTE, // Condición: El pedido debe estar pendiente.
                ],
                [
                    // Valores que se usarán SOLO si se CREA un nuevo pedido.
                    // 'total' => 0, // El total se recalcula al finalizar o al mostrar el carrito.
                ]
            );
        } catch (\Exception $e) {
            // Manejo de error si falla la consulta/creación del pedido.
            Log::error("Error en firstOrCreate Pedido: " . $e->getMessage(), ['user_id' => $user->id]);
            // Redirige de vuelta a la página anterior con un error genérico.
            return redirect()->back()->with('error', 'Ocurrió un error al acceder a tu carrito. Inténtalo de nuevo.');
        }


        // 4. Buscar Detalle Existente o Crear Nuevo Ítem:
        // Comprueba si el libro específico (`$request->libro_id`) ya está
        // en el pedido pendiente actual (`$pedidoPendiente->id`).
        $detalleExistente = Detallespedidos::where('pedido_id', $pedidoPendiente->id)
                                         ->where('libro_id', $request->libro_id)
                                         ->first(); // Obtiene el detalle si existe, o null.

        if ($detalleExistente) {
            // 4.1. Si el libro ya existe en el carrito: Actualizar cantidad.
            // Se suma la nueva cantidad (`$request->cantidad`) a la cantidad existente.
            $detalleExistente->cantidad += $request->cantidad;
            // Nota: Se decide no actualizar el precio aquí, manteniendo el precio original
            // con el que se añadió el ítem por primera vez para consistencia.
            $detalleExistente->save(); // Guarda los cambios en el registro del detalle existente.
            $message = 'Cantidad actualizada en el carrito.'; // Mensaje de éxito para el usuario.
        } else {
            // 4.2. Si el libro no existe en el carrito: Crear un nuevo registro de detalle.
            // Se utiliza el método estático `create` del modelo Detallespedidos.
            Detallespedidos::create([
                'pedido_id' => $pedidoPendiente->id, // ID del pedido pendiente asociado.
                'libro_id'  => $request->libro_id, // ID del libro añadido.
                'cantidad'  => $request->cantidad, // Cantidad inicial.
                'precio'    => $request->precio, // Precio del libro en el momento de añadirlo (viene del formulario).
            ]);
            $message = 'Libro añadido al carrito correctamente.'; // Mensaje de éxito para el usuario.
        }

        // 5. Redirección Éxito:
        // Redirige al usuario a la vista del carrito (`detallespedidos.index`).
        // Se incluye un mensaje flash de éxito en la sesión.
        return redirect()->route('detallespedidos.index')
                       ->with('success', $message);
    }

    /**
     * Muestra un recurso específico (Detallespedidos).
     *
     * Este método no es relevante para la funcionalidad del carrito, donde todos los ítems
     * se visualizan juntos en la vista `index`. Por convención de recursos RESTful,
     * existe, pero simplemente redirige al usuario a la vista principal del carrito.
     *
     * @param  \App\Models\Detallespedidos  $detallespedidos Instancia inyectada por Route Model Binding (no utilizada).
     * @return \Illuminate\Http\RedirectResponse Siempre redirige al índice del carrito.
     */
    public function show(Detallespedidos $detallespedidos): RedirectResponse
    {
         // Redirige siempre a la vista principal del carrito (`detallespedidos.index`).
         return redirect()->route('detallespedidos.index');
    }

    /**
     * Muestra el formulario para editar un recurso específico (Detallespedidos).
     *
     * Este método no se utiliza en la implementación actual del carrito. La edición
     * (específicamente, la actualización de la cantidad) se realiza directamente
     * desde la vista `index` mediante el método `update`. Por lo tanto, esta ruta
     * simplemente redirige al índice del carrito.
     *
     * @param  \App\Models\Detallespedidos  $detallespedidos Instancia inyectada por Route Model Binding (no utilizada).
     * @return \Illuminate\Http\RedirectResponse Siempre redirige al índice del carrito.
     */
    public function edit(Detallespedidos $detallespedidos): RedirectResponse
    {
        // Redirige siempre a la vista principal del carrito (`detallespedidos.index`).
        return redirect()->route('detallespedidos.index');
    }

    /**
     * Actualiza la cantidad de un ítem específico en el carrito.
     *
     * Se invoca típicamente desde un formulario en la vista del carrito (`detallespedidos.index`).
     * Valida que la `cantidad` recibida sea un entero positivo.
     * Verifica que el usuario esté autenticado (`Auth::check()`).
     * Realiza una comprobación de autorización crucial: utiliza `loadMissing('pedido')` para
     * cargar la relación con el pedido asociado al detalle (si no está ya cargada) y luego
     * verifica que este pedido exista, pertenezca al usuario autenticado (`cliente_id`) y
     * tenga el estado 'pendiente' (`Pedidos::STATUS_PENDIENTE`). Si alguna de estas condiciones
     * no se cumple, registra una advertencia y redirige con un error, previniendo modificaciones
     * no autorizadas.
     * Si la autorización es correcta, actualiza el atributo `cantidad` del modelo `$detallespedidos`
     * con el valor validado y guarda los cambios usando `save()`.
     * Finalmente, redirige de vuelta a la vista del carrito (`detallespedidos.index`) con un mensaje de éxito.
     *
     * @param  \Illuminate\Http\Request  $request Objeto con la nueva cantidad.
     * @param  \App\Models\Detallespedidos  $detallespedidos Instancia del ítem a actualizar (Route Model Binding).
     * @return \Illuminate\Http\RedirectResponse Redirige al índice del carrito o a login/atrás si hay error.
     */
    public function update(Request $request, Detallespedidos $detallespedidos): RedirectResponse
    {
        // 1. Validación de Datos:
        $request->validate([
            'cantidad' => 'required|integer|min:1', // La nueva cantidad debe ser un entero positivo.
        ]);

        // 2. Autorización: Verifica autenticación.
        if (!Auth::check()) {
             // Redirige al login si no está autenticado.
             return redirect()->route('login')->with('error', 'Debes iniciar sesión para modificar tu carrito.');
        }
        $user = Auth::user(); // Obtiene el usuario autenticado.

        // Carga la relación 'pedido' del detalle si aún no está cargada para la verificación.
        // `loadMissing` es eficiente, solo carga si no se ha cargado previamente.
        $detallespedidos->loadMissing('pedido');
        $pedidoDelDetalle = $detallespedidos->pedido; // Accede a la relación cargada.

        // 3. Comprobación de Propiedad y Estado:
        // Verifica que el detalle pertenezca a un pedido PENDIENTE del usuario actual.
        // - ¿Existe el pedido asociado al detalle? (!$pedidoDelDetalle)
        // - ¿El ID del cliente del pedido coincide con el ID del usuario logueado? ($pedidoDelDetalle->cliente_id !== $user->id)
        // - ¿El estado del pedido es 'pendiente'? ($pedidoDelDetalle->status !== Pedidos::STATUS_PENDIENTE)
        if (!$pedidoDelDetalle || $pedidoDelDetalle->cliente_id !== $user->id || $pedidoDelDetalle->status !== Pedidos::STATUS_PENDIENTE) {
             // Si alguna condición falla, registra una advertencia y redirige con error.
             Log::warning("Intento no autorizado de actualizar detalle ID {$detallespedidos->id} por usuario ID {$user->id}");
             return redirect()->route('detallespedidos.index')->with('error', 'No se pudo actualizar el item.');
        }

        // 4. Actualización de la Cantidad:
        // Si la autorización es correcta, actualiza el atributo 'cantidad' del modelo $detallespedidos.
        $detallespedidos->cantidad = $request->cantidad;
        $detallespedidos->save(); // Guarda los cambios en la base de datos.

        // 5. Redirección Éxito:
        // Redirige de vuelta a la vista del carrito con un mensaje de éxito.
        return redirect()->route('detallespedidos.index')
                       ->with('success', 'Cantidad actualizada correctamente.');
    }

    /**
     * Elimina un ítem específico (Detallespedidos) del carrito.
     *
     * Se invoca típicamente desde un botón o formulario en la vista del carrito (`detallespedidos.index`).
     * Verifica que el usuario esté autenticado (`Auth::check()`).
     * Realiza la misma comprobación de autorización estricta que en `update()`: carga la relación
     * con el pedido (`loadMissing('pedido')`) y verifica que el pedido exista, pertenezca al
     * usuario autenticado (`cliente_id`) y esté en estado 'pendiente' (`Pedidos::STATUS_PENDIENTE`).
     * Si la autorización falla, registra una advertencia y redirige con error.
     * Si la autorización es correcta, elimina el registro `Detallespedidos` de la base de datos
     * usando el método `delete()` sobre la instancia inyectada por Route Model Binding.
     * Finalmente, redirige de vuelta a la vista del carrito (`detallespedidos.index`) con un mensaje de éxito.
     *
     * @param  \App\Models\Detallespedidos  $detallespedidos Instancia del ítem a eliminar (Route Model Binding).
     * @return \Illuminate\Http\RedirectResponse Redirige al índice del carrito o a login/atrás si hay error.
     */
    public function destroy(Detallespedidos $detallespedidos): RedirectResponse
    {
         // 1. Autorización: Verifica autenticación.
        if (!Auth::check()) {
             return redirect()->route('login')->with('error', 'Debes iniciar sesión para modificar tu carrito.');
        }
        $user = Auth::user(); // Obtiene el usuario autenticado.

        // Carga la relación 'pedido' si es necesario para la verificación de propiedad y estado.
        $detallespedidos->loadMissing('pedido');
        $pedidoDelDetalle = $detallespedidos->pedido; // Accede a la relación.

        // 2. Comprobación de Propiedad y Estado:
        // Misma verificación crucial que en update() para asegurar que solo se borren ítems del carrito pendiente del usuario.
        if (!$pedidoDelDetalle || $pedidoDelDetalle->cliente_id !== $user->id || $pedidoDelDetalle->status !== Pedidos::STATUS_PENDIENTE) {
             Log::warning("Intento no autorizado de eliminar detalle ID {$detallespedidos->id} por usuario ID {$user->id}");
             return redirect()->route('detallespedidos.index')->with('error', 'No se pudo eliminar el item.');
        }

        // 3. Eliminación del Ítem:
        // Si la autorización es correcta, elimina el registro del detalle de la base de datos.
        $detallespedidos->delete();


        // 4. Redirección Éxito:
        // Redirige de vuelta a la vista del carrito con un mensaje de éxito.
        return redirect()->route('detallespedidos.index')
                       ->with('success', 'Item eliminado del carrito.');
    }
}
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";